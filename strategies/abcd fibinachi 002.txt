import OpenAI from "openai";
import type { IStorage } from '../storage';
import type { ABCDPattern, ABCDConfig } from './abcd-fibonacci-strategy';

// the newest OpenAI model is "gpt-4o" which was released May 13, 2024. do not change this unless explicitly requested by the user
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

export interface ABCDAnalysisResult {
  currentPerformance: {
    strengths: string[];
    weaknesses: string[];
    riskFactors: string[];
    entryTimingIssues: string[];
  };
  improvementRecommendations: {
    saferEntry: ABCDImprovement[];
    profitabilityEnhancement: ABCDImprovement[];
    riskManagement: ABCDImprovement[];
    timingOptimization: ABCDImprovement[];
  };
  optimizedParameters: {
    [key: string]: {
      current: string | number;
      recommended: string | number;
      reasoning: string;
      expectedImprovement: string;
    };
  };
  confluenceEnhancements: {
    additionalFactors: string[];
    weightingSystem: { [factor: string]: number };
    minimumConfluence: number;
  };
  expectedOutcomes: {
    entryAccuracy: string;
    profitFactor: string;
    drawdownReduction: string;
    falseSignalReduction: string;
  };
  implementationPriority: string[];
}

export interface ABCDImprovement {
  category: 'entry_validation' | 'confluence_scoring' | 'risk_parameters' | 'timing_filters' | 'pattern_validation';
  priority: 'critical' | 'high' | 'medium' | 'low';
  title: string;
  description: string;
  implementation: string;
  expectedBenefit: string;
  riskMitigation: string;
  confidence: number; // 0-100
}

export class ABCDFibonacciAnalyzer {
  private storage: IStorage;

  constructor(storage: IStorage) {
    this.storage = storage;
  }

  /**
   * Analyze ABCD Fibonacci strategy and provide AI-powered improvement recommendations
   */
  async analyzeABCDStrategy(): Promise<ABCDAnalysisResult> {
    try {
      console.log('Analyzing ABCD Fibonacci strategy with AI for safety and profitability improvements...');

      const prompt = this.createABCDAnalysisPrompt();
      
      const response = await openai.chat.completions.create({
        model: "gpt-4o",
        messages: [
          {
            role: "system",
            content: "You are an expert quantitative analyst specializing in harmonic pattern trading and Fibonacci confluence analysis. Analyze the ABCD Fibonacci strategy implementation and provide specific, actionable improvements for safer entries and enhanced profitability. Focus on reducing false signals while maintaining high-probability setups."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        response_format: { type: "json_object" },
        temperature: 0.3
      });

      const analysisData = JSON.parse(response.choices[0].message.content || '{}');
      
      return this.parseABCDAnalysisResult(analysisData);
      
    } catch (error) {
      console.error('ABCD Fibonacci AI analysis error:', error);
      return this.createFallbackABCDAnalysis();
    }
  }

  /**
   * Generate comprehensive ABCD optimization report
   */
  async generateABCDOptimizationReport(): Promise<{
    executiveSummary: string;
    detailedAnalysis: ABCDAnalysisResult;
    implementationPlan: {
      phase1: string[];
      phase2: string[];
      phase3: string[];
    };
    expectedPerformanceGains: {
      entryAccuracy: string;
      profitIncrease: string;
      riskReduction: string;
    };
  }> {
    try {
      const analysis = await this.analyzeABCDStrategy();
      
      const report = {
        executiveSummary: this.generateExecutiveSummary(analysis),
        detailedAnalysis: analysis,
        implementationPlan: {
          phase1: analysis.implementationPriority.slice(0, 3),
          phase2: analysis.implementationPriority.slice(3, 6),
          phase3: analysis.implementationPriority.slice(6)
        },
        expectedPerformanceGains: {
          entryAccuracy: analysis.expectedOutcomes.entryAccuracy,
          profitIncrease: analysis.expectedOutcomes.profitFactor,
          riskReduction: analysis.expectedOutcomes.drawdownReduction
        }
      };

      return report;
    } catch (error) {
      console.error('ABCD optimization report generation error:', error);
      throw error;
    }
  }

  private createABCDAnalysisPrompt(): string {
    return `
Analyze this ABCD Fibonacci pattern trading strategy for safety and profitability improvements:

## Current ABCD Strategy Implementation:

**Pattern Detection:**
- Swing point identification with 5-bar lookback
- ABCD harmonic pattern validation
- Fibonacci extension targets (127%, 161%, 200%, 261%)
- BC retracement validation (38.2% - 88.6%)
- AB/CD ratio requirements (61.8% - 161.8%)

**Current Entry Criteria:**
- Pattern strength >= 75%
- Confluence requirement >= 3 factors
- Volume confirmation enabled
- Trend alignment required
- 0.5% minimum swing size
- 2% Fibonacci tolerance

**Current Risk Management:**
- Fixed stop loss placement
- Static position sizing
- Basic Fibonacci targets
- Limited confluence factors

## Analysis Requirements:

Please provide a comprehensive JSON analysis with the following structure:

{
  "currentPerformance": {
    "strengths": ["list current strategy strengths"],
    "weaknesses": ["list areas needing improvement"],
    "riskFactors": ["identify risk management gaps"],
    "entryTimingIssues": ["timing and entry quality problems"]
  },
  "improvementRecommendations": {
    "saferEntry": [
      {
        "category": "entry_validation",
        "priority": "critical|high|medium|low",
        "title": "improvement name",
        "description": "detailed description",
        "implementation": "specific implementation steps",
        "expectedBenefit": "quantified benefit",
        "riskMitigation": "how it reduces risk",
        "confidence": 85
      }
    ],
    "profitabilityEnhancement": [...],
    "riskManagement": [...],
    "timingOptimization": [...]
  },
  "optimizedParameters": {
    "fibonacciTolerance": {
      "current": 0.02,
      "recommended": 0.015,
      "reasoning": "tighter tolerance reduces false signals",
      "expectedImprovement": "15-20% fewer false entries"
    }
  },
  "confluenceEnhancements": {
    "additionalFactors": ["volume profile", "market structure", "momentum divergence"],
    "weightingSystem": {
      "fibonacci_confluence": 3,
      "volume_confirmation": 2,
      "trend_alignment": 2,
      "market_structure": 1
    },
    "minimumConfluence": 4
  },
  "expectedOutcomes": {
    "entryAccuracy": "+25-35%",
    "profitFactor": "+20-30%",
    "drawdownReduction": "20-25%",
    "falseSignalReduction": "30-40%"
  },
  "implementationPriority": ["most critical improvements first"]
}

Focus on:
1. Advanced confluence analysis beyond basic Fibonacci
2. Dynamic parameter adjustment based on market conditions
3. Enhanced risk management with volatility considerations
4. Pre-pattern detection for earlier entry opportunities
5. Multi-timeframe validation for higher probability setups
6. Market regime filtering to avoid unfavorable conditions
7. Volume and momentum confirmation techniques
8. Advanced stop loss and target optimization

Provide specific, actionable recommendations that can be immediately implemented to improve entry safety and profitability.
    `;
  }

  private parseABCDAnalysisResult(data: any): ABCDAnalysisResult {
    return {
      currentPerformance: {
        strengths: data.currentPerformance?.strengths || [],
        weaknesses: data.currentPerformance?.weaknesses || [],
        riskFactors: data.currentPerformance?.riskFactors || [],
        entryTimingIssues: data.currentPerformance?.entryTimingIssues || []
      },
      improvementRecommendations: {
        saferEntry: data.improvementRecommendations?.saferEntry || [],
        profitabilityEnhancement: data.improvementRecommendations?.profitabilityEnhancement || [],
        riskManagement: data.improvementRecommendations?.riskManagement || [],
        timingOptimization: data.improvementRecommendations?.timingOptimization || []
      },
      optimizedParameters: data.optimizedParameters || {},
      confluenceEnhancements: data.confluenceEnhancements || {
        additionalFactors: [],
        weightingSystem: {},
        minimumConfluence: 3
      },
      expectedOutcomes: data.expectedOutcomes || {
        entryAccuracy: "N/A",
        profitFactor: "N/A", 
        drawdownReduction: "N/A",
        falseSignalReduction: "N/A"
      },
      implementationPriority: data.implementationPriority || []
    };
  }

  private generateExecutiveSummary(analysis: ABCDAnalysisResult): string {
    return `
ABCD Fibonacci Strategy Optimization Analysis

The current ABCD Fibonacci implementation shows strong harmonic pattern detection capabilities but requires enhancement in entry validation and risk management. Key improvement areas include:

CRITICAL IMPROVEMENTS:
${analysis.implementationPriority.slice(0, 3).map(item => `• ${item}`).join('\n')}

EXPECTED PERFORMANCE GAINS:
• Entry Accuracy: ${analysis.expectedOutcomes.entryAccuracy}
• Profit Factor: ${analysis.expectedOutcomes.profitFactor}
• Risk Reduction: ${analysis.expectedOutcomes.drawdownReduction}
• False Signal Reduction: ${analysis.expectedOutcomes.falseSignalReduction}

The recommended optimizations focus on enhanced confluence analysis, dynamic parameter adjustment, and advanced risk management to achieve safer entries with higher profitability potential.
    `.trim();
  }

  private createFallbackABCDAnalysis(): ABCDAnalysisResult {
    return {
      currentPerformance: {
        strengths: ["Strong harmonic pattern detection", "Fibonacci confluence analysis", "Multi-symbol coverage"],
        weaknesses: ["Fixed parameter approach", "Limited confluence factors", "Basic risk management"],
        riskFactors: ["Static stop placement", "No market regime filtering", "Limited volume analysis"],
        entryTimingIssues: ["Late pattern completion entries", "No pre-pattern detection", "Limited timeframe analysis"]
      },
      improvementRecommendations: {
        saferEntry: [
          {
            category: 'entry_validation',
            priority: 'critical',
            title: 'Multi-timeframe confluence validation',
            description: 'Validate ABCD patterns across multiple timeframes before entry',
            implementation: 'Add 4H and daily timeframe pattern confirmation',
            expectedBenefit: '30-40% reduction in false signals',
            riskMitigation: 'Higher probability setups with multi-TF alignment',
            confidence: 90
          }
        ],
        profitabilityEnhancement: [],
        riskManagement: [],
        timingOptimization: []
      },
      optimizedParameters: {},
      confluenceEnhancements: {
        additionalFactors: ["Volume profile", "Market structure", "Momentum indicators"],
        weightingSystem: { "fibonacci": 3, "volume": 2, "structure": 2 },
        minimumConfluence: 4
      },
      expectedOutcomes: {
        entryAccuracy: "+25-35%",
        profitFactor: "+20-30%",
        drawdownReduction: "20-25%",
        falseSignalReduction: "30-40%"
      },
      implementationPriority: ["Multi-timeframe validation", "Enhanced confluence scoring", "Dynamic parameters"]
    };
  }
}